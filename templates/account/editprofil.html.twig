{% extends 'base.html.twig' %}

{% block title %}Edit Profil Oxygen Live{% endblock %}
{% block stylesheets %}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/>
<style>
#register-client legend {
    display:none;
}

form {
		position: relative;
	}

	/* Base for label styling */
	[type="checkbox"]:not(:checked),
	[type="checkbox"]:checked {
		position: absolute;
		left: 0;
		opacity: 0.01;
	}
	[type="checkbox"]:not(:checked) + label,
	[type="checkbox"]:checked + label {
		position: relative;
		padding-left: 2.3em;
		font-size: 1.05em;
		line-height: 1.7;
		cursor: pointer;
	}

	/* checkbox aspect */
	[type="checkbox"]:not(:checked) + label:before,
	[type="checkbox"]:checked + label:before {
		content: '';
		position: absolute;
		left: 0;
		top: 0;
		width: 1.4em;
		height: 1.4em;
		border: 1px solid #aaa;
		background: #FFF;
		border-radius: .2em;
		box-shadow: inset 0 1px 3px rgba(0,0,0, .1), 0 0 0 rgba(203, 34, 237, .2);
		-webkit-transition: all .275s;
				transition: all .275s;
	}

	/* checked mark aspect */
	[type="checkbox"]:not(:checked) + label:after,
	[type="checkbox"]:checked + label:after {
		content: '\f7a6';
        font-family: "Font Awesome 5 Free"; 
        font-weight: 900;
		position: absolute;
		top: .525em;
		left: .18em;
		font-size: 1.375em;
		color: #ff0000;
		line-height: 0;
		-webkit-transition: all .2s;
				transition: all .2s;
	}

	/* checked mark aspect changes */
	[type="checkbox"]:not(:checked) + label:after {
		opacity: 0;
		-webkit-transform: scale(0) rotate(45deg);
				transform: scale(0) rotate(45deg);
	}

	[type="checkbox"]:checked + label:after {
		opacity: 1;
		-webkit-transform: scale(1) rotate(0);
				transform: scale(1) rotate(0);
	}

	/* Disabled checkbox */
	[type="checkbox"]:disabled:not(:checked) + label:before,
	[type="checkbox"]:disabled:checked + label:before {
		box-shadow: none;
		border-color: #bbb;
		background-color: #e9e9e9;
	}

	[type="checkbox"]:disabled:checked + label:after {
		color: #777;
	}

	[type="checkbox"]:disabled + label {
		color: #aaa;
	}

	/* Accessibility */
	[type="checkbox"]:checked:focus + label:before,
	[type="checkbox"]:not(:checked):focus + label:before {
		box-shadow: inset 0 1px 3px rgba(0,0,0, .1), 0 0 0 6px rgba(203, 34, 237, .2);
	}
</style>
{% endblock %}

{% block body %}
<div class="container ">
	<div class="container mx-auto my-5 border border-secondary rounded">
		<div class="mt-3 fs-4"><h2>Modifier le profil {{ app.user.client.nom }} {{ app.user.client.prenom }}<h2></div>
            {# {{form(formRegistration)}} #}
            {{ form_start(form) }}


			{{ form_widget(form) }}

   
			
		<button rtype="submit" class="btn btn-primary">Valider</button>
			{{ form_end(form) }}
{% endblock %}


{% block javascripts %}
 <script>
    $(document).ready(function() {
        $(document).on('keydown', '#registration_client_phone', function() {
            let phone = $(this).val();
			//if (phone.length == 2 && phone != 1 && phone != 2 && phone != 3 && phone != 4 && phone != 5 && phone != 6 && phone != 7) {
		    if (phone.length == 2 &&  phone == 0 || phone.length == 2 &&  phone >= 8) {

				$(this).val('');
				return false;
			}

            if (phone.length >=1 && phone.length <= 14) {
                let numeric = phone.replace(/(\.)/g, "");
                console.log(numeric);

                if ($.isNumeric(numeric)) {
                    $(this).val(numeric.replace(/(\d\d(?!$))/g, "$1."));
                } else {
                    $(this).val('');
                }
            } else {
                $(this).val(phone.substring(0,14));
            }
        });
        $(document).on('keyup', '#registration_client_phone', function() {
            let phone = $(this).val();
            if (phone.length > 14) {
                $(this).val(phone.substring(0,14));
            }
            if (phone.length <= 14) {
                let numeric = phone.replace(/(\.)/g, "");
                if ($.isNumeric(numeric)) {
                    $(this).val(phone.substring(0,14));
                } else {
                    let n = numeric.length;
                    let x = numeric.substring(0,(n-1));
                    $(this).val(numeric.replace(/(\d\d(?!$))/g, "$1."));
                }
            }
        });
    });
    </script>
{% endblock %}
